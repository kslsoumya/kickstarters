{"version":3,"sources":["components/navBar.js","actions/index.js","containers/titleFilter.js","actions/titleSearch.js","containers/homePage.js","components/dataCard.js","containers/dataList.js","components/app.js","reducers/index.js","reducers/reducer_home.js","index.js"],"names":["NavBar","react_default","a","createElement","className","BASE_URL","FetchList","type","payload","axios","get","TitleFilter","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","val","setState","filterTitle","_this2","value","onChange","event","searchTermChange","target","onClick","Component","SearchTitle","title","dataList","filter","project","toLowerCase","indexOf","HomePage","fetchDataList","bind","assertThisInitialized","titleFilter_TitleFilter","connect","dispatch","bindActionCreators","Transition","Slide_default","assign","direction","DataCard","open","handleClickOpen","handleClose","Card_default","style","textAlign","height","CardContent_default","Typography_default","variant","component","starter","color","gutterBottom","by","country","location","CardActions_default","Button_default","size","Dialog_default","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","currency","DialogActions_default","DataList","length","Grid_default","container","spacing","map","item","xs","sm","md","lg","key","dataCard_DataCard","getList","App","navBar","homePage","rootReducer","combineReducers","arguments","undefined","action","data","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","app_App","document","querySelector"],"mappings":"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","file":"static/js/main.15a95eb0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst NavBar =() => {\r\nreturn (\r\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\">\r\n  <a className=\"navbar-brand\">KickStarters</a>\r\n  \r\n</nav>\r\n);\r\n\r\n}\r\n\r\nexport default NavBar;","import axios from 'axios';\r\n\r\n\r\n\r\nconst BASE_URL = 'http://starlord.hackerearth.com/kickstarter';\r\n\r\nexport function FetchList () {\r\n    const request =axios.get(BASE_URL);\r\n\r\n    // console.log(request);\r\n    return {\r\n        type : 'HOME_PAGE',\r\n        payload : request\r\n    }\r\n    \r\n\r\n}","import React,{Component} from 'react';\r\n\r\n\r\nexport default class TitleFilter extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    this.state ={\r\n        term :''\r\n    }\r\n    }\r\n\r\n    searchTermChange(val) {\r\n        this.setState ({term : val})\r\n        if(val === '') {\r\n            this.props.filterTitle(val);\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <div className='row searchBar' >\r\n                <div className='col-md-4'>\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\" className=\"form-control\" \r\n                        value ={this.state.term}\r\n                        onChange ={(event)=> this.searchTermChange(event.target.value)}\r\n                        /> \r\n                        <span className='input-group-btn'>\r\n                            <button className='btn  btn-secondary'\r\n                            onClick ={()=> this.props.filterTitle(this.state.term)}>search</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// function mapStateToProps(state) {\r\n//     return {\r\n//         dataList: state.dataList\r\n//     };\r\n// }\r\n\r\n\r\n// function mapDispatchToProps(dispatch) {\r\n//     return bindActionCreators({ TitleSearch: TitleSearch }, dispatch);\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps)(TitleFilter)","\r\n\r\nexport function SearchTitle (title , dataList) {\r\n   const results = dataList.filter((project) =>{\r\n       if (project.title.toLowerCase().indexOf(title)!==-1)\r\n       return project;\r\n       \r\n   })\r\n   \r\n    // console.log(request);\r\n    return {\r\n        type : 'TITLE_FILTER',\r\n        payload : results\r\n    }\r\n    \r\n\r\n}","import React, { Component } from 'react';\r\nimport { FetchList } from '../actions/index'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport TitleFilter from './titleFilter';\r\nimport { SearchTitle } from '../actions/titleSearch'\r\n\r\nclass HomePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {term :''}\r\n        this.fetchDataList = this.fetchDataList.bind(this);\r\n        this.fetchDataList(this.state.term);\r\n    }\r\n\r\n    fetchDataList (term) {\r\n        \r\n        if(term === ''){\r\n        this.props.FetchList();\r\n        }\r\n        else {\r\n            this.setState ({term :term})\r\n        this.props.SearchTitle(term , this.props.dataList)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TitleFilter   filterTitle = {this.fetchDataList}/>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dataList: state.dataList\r\n    };\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({FetchList : FetchList,SearchTitle : SearchTitle},dispatch);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React, { Component } from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\nfunction Transition(props) {\r\n        return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\n\r\nexport default class DataCard extends Component {\r\n\r\n        state = {\r\n                open: false,\r\n        };\r\n\r\n        handleClickOpen = () => {\r\n                this.setState({ open: true });\r\n        };\r\n\r\n        handleClose = () => {\r\n                this.setState({ open: false });\r\n        };\r\n\r\n        render() {\r\n                var cardStyle = {\r\n                        //         display: 'block',\r\n                                // width: '25vw',\r\n                        //         transitionDuration: '0.3s',\r\n                        textAlign: 'center',\r\n                        height: '48vh'\r\n                }\r\n                return (\r\n                        <div>\r\n                        <Card className='root' style={cardStyle}>\r\n                                \r\n                                <CardContent>\r\n                                <Typography variant=\"h5\" component=\"h2\">\r\n\r\n                                {this.props.starter.title} \r\n                                </Typography><br/>\r\n          \r\n                                <Typography className= 'root' color=\"textSecondary\" gutterBottom>\r\n                                        <strong>By:</strong>{this.props.starter.by}<br/>\r\n                                                <strong>Country:</strong>{this.props.starter.country}<br/>\r\n                                                <strong>Location:</strong>{this.props.starter.location}<br/>\r\n                                                <strong>State:</strong>{this.props.starter.state}<br/>\r\n                                                \r\n                                               <strong>Type:</strong>{this.props.starter.type}\r\n                                               </Typography>\r\n                                                \r\n                                </CardContent>\r\n                                <CardActions>\r\n                                        <Button size=\"small\" color='primary'\r\n                                                onClick={this.handleClickOpen}>View Details</Button>\r\n                                </CardActions>\r\n                                </Card>\r\n                                <Dialog\r\n                                        open={this.state.open}\r\n                                        TransitionComponent={Transition}\r\n                                        keepMounted\r\n                                        onClose={this.handleClose}\r\n                                        aria-labelledby=\"alert-dialog-slide-title\"\r\n                                        aria-describedby=\"alert-dialog-slide-description\"\r\n                                >\r\n                                        <DialogTitle id=\"alert-dialog-slide-title\">\r\n                                                {this.props.starter.title}\r\n                                        </DialogTitle>\r\n                                        <DialogContent>\r\n                                                <DialogContentText id=\"alert-dialog-slide-description\" color='textPrimary'>\r\n\r\n                                                \r\n                                                <strong>Funded:</strong>{this.props.starter['percentage.funded']}\r\n                                                <br/>\r\n                                                \r\n                                                <strong>Backers:</strong>{this.props.starter['num.backers']}\r\n                                                <br/>\r\n                                                \r\n                                                <strong>Currency:</strong>{this.props.starter.currency}\r\n                                                <br/>\r\n                                                \r\n                                                <strong>Pledged:</strong>{this.props.starter['amt.pledged']}\r\n                                                <br/>\r\n                                                \r\n                                                <strong>Blurb:</strong>{this.props.starter['blurb']}\r\n                                                \r\n\r\n                                                </DialogContentText>\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                                <Button onClick={this.handleClose} color=\"primary\">\r\n                                                        Close\r\n                                                 </Button>\r\n                                        </DialogActions>\r\n                                </Dialog>\r\n                                </div>\r\n                        \r\n                );\r\n\r\n        }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DataCard from '../components/dataCard';\r\n\r\n\r\n\r\nclass DataList extends Component {\r\n\r\n    getList() {\r\n        if (this.props.dataList.length === 0) {\r\n            return <div>Loading........</div>\r\n        } else {\r\n            return (\r\n                <Grid container spacing={24}>\r\n                    {this.props.dataList.map(\r\n                        (item) => {\r\n                            return (\r\n                                <Grid item xs={12} sm={12} md={4} lg={4} key={item['s.no']}>\r\n                                    <DataCard key={item['s.no']} starter={item} />\r\n                                </Grid>\r\n                            );\r\n                        }\r\n                    )}\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.getList()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dataList: state.dataList\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DataList)","import React, { Component } from 'react';\nimport NavBar from './navBar';\nimport HomePage from '../containers/homePage'\nimport DataList from '../containers/dataList'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <br/>\n        <HomePage />\n        <br/>\n        <DataList />\n        </div>\n    );\n  }\n}\n","import { combineReducers } from 'redux';\nimport HOMEREDUCER from './reducer_home';\n\nconst rootReducer = combineReducers({\n  dataList : HOMEREDUCER\n});\n\nexport default rootReducer;\n","export default function (state = [] ,action) {\r\n\r\n    // console.log('Action received'+action)\r\n    switch(action.type) {\r\n        case 'HOME_PAGE':\r\n        return action.payload.data;\r\n\r\n        case 'TITLE_FILTER':\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport App from './components/app';\nimport reducers from './reducers';\nimport  ReduxPromise from 'redux-promise'\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>\n  , document.querySelector('.container'));\n"],"sourceRoot":""}